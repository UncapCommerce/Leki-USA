{%- comment -%}
  /sections/contact-form.liquid
{%- endcomment -%}
{%- liquid
  assign section_width = section.settings.width
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = '#ContactForm--' | append: section.id
  assign animation_delay = 150
-%}

{%- capture form_fields -%}
  {%- for block in section.blocks -%}
    {%- assign required = '' -%}
    {%- if block.settings.required -%}
        {%- assign required = 'required' -%}
    {%- endif -%}

    {%- case block.type -%}

      {%- when 'heading' -%}
        <div class="form__item form__item--heading"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <h2 class="form__heading">{{ block.settings.title }}</h2>          
        </div>
      {%- when 'content' -%}
      <div class="form__item form__item--content" {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          {{ block.settings.content }}
      </div>

      {%- when 'email' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title }}</label>
          <input type="email" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[email]" placeholder="{{ block.settings.title }}" autocorrect="off" autocapitalize="off" {{ required }}/>
        </div>

      {%- when 'body' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title }}</label>
          <textarea rows="10" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[body]" placeholder="{{ block.settings.title }}" {{ required }}></textarea>
        </div>

      {%- when 'text' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title }}</label>
          <input type="text" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[{{ block.settings.title | handleize }}]" autocapitalize="words" value="" placeholder="{{ block.settings.title }}" {{ required }}/>
        </div>

      {%- when 'textarea' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title }}</label>
          <textarea rows="10" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[{{ block.settings.title | handleize }}]" placeholder="{{ block.settings.title }}" {{ required }}></textarea>
        </div>

      {%- when 'telephone' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title }}</label>
          <input type="tel" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[telephone]" value="" placeholder="{{ block.settings.title }}" {{ required }}/>
        </div>

      {%- when 'spacer' -%}
        {%- assign hr_class = 'hr--clear' -%}
        {%- assign show_line = block.settings.line -%}
        {%- if show_line -%}
          {%- assign hr_class = 'hr--full' -%}
        {%- endif -%}
        <div class="form__item">
          <hr class="{{ hr_class }}"
            {% if animations_enabled and show_line %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}
            {{ block.shopify_attributes }}>
        </div>

      {%- when 'checkbox' -%}
        <div class="form__item form__item--checkbox field_space"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          <label for="Form-{{ section.id }}-{{ forloop.index0 }}">
            <input type="checkbox" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--checkbox" name="contact[{{ block.settings.title | handleize }}]" value="{{ block.settings.title }}" {{ required }}></input>
            <span>{{ block.settings.title }}</span>
          </label>
        </div>

      {%- when 'data-checkbox' -%}
      <div class="form__item form__item--checkbox"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
      <label for="Form-{{ section.id }}-{{ forloop.index0 }}">
      <input type="checkbox" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--checkbox" name="" value="" {{ required }}></input>
      <span>{{ block.settings.title }}</span>
      </div>

      {%- when 'radio' -%}
        <fieldset class="form__item form__item--radio"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          {%- if block.settings.title != blank -%}
            <legend class="form__label">{{ block.settings.title }}</legend>
          {%- endif -%}

          {%- for i in (1..6) -%}
            {%- capture index -%}label-{%- cycle 'one', 'two', 'three', 'four', 'five', 'six' -%}{%- endcapture -%}

            {%- if block.settings[index] != blank -%}
              <label for="Form-{{ section.id }}-{{ block.id }}-{{ i }}">
                <input type="radio" id="Form-{{ section.id }}-{{ block.id }}-{{ i }}" class="input--radio" name="contact[{{ block.settings.title | handleize }}-{{ block.id }}]" value="{{ block.settings[index] }}" {{ required }}>
                <span>{{ block.settings[index] }}</span>
              </label>
            {%- endif -%}
          {%- endfor -%}
        </fieldset>

      {%- when 'select' -%}
      <div class="form_address-fields">
        <fieldset class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}
          {{ block.shopify_attributes }}>
          {%- if block.settings.title != blank -%}
            <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="form__label">{{ block.settings.title }}</label>
          {%- endif -%}
          <div class="selector-wrapper">
            <select id="Form-{{ section.id }}-{{ forloop.index0 }}" class="FormSelect country-select" name="contact[{{ block.settings.title | handleize }}]" {{ block.settings.required1 }}>
              <option disabled selected value="Select Country">{{ block.settings.default_name }}</option>        
              {{ all_country_option_tags }}
            </select>
            {%- render 'icon-select' -%}
          </div>
        </fieldset>
        <fieldset class="form__item"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}
            {{ block.shopify_attributes }}>
            {%- if block.settings.title1 != blank -%}
              <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="form__label">{{ block.settings.title1 }}</label>
            {%- endif -%}
            <div class="selector-wrapper">
              <select id="Form-{{ section.id }}-{{ forloop.index0 }}" class="FormSelect state-select" name="contact[{{ block.settings.title1 | handleize }}]" {{ block.settings.required2 }}>
              <option disabled selected value="Select Country">{{ block.settings.default_name1 }}</option> 
              </select>
              {%- render 'icon-select' -%}
            </div>
          </fieldset>
          <div class="form__item"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}
            {{ block.shopify_attributes }}>
            <label for="Form-{{ section.id }}-{{ forloop.index0 }}" class="hidden-label">{{ block.settings.title_1 }}</label>
            <input type="text" id="Form-{{ section.id }}-{{ forloop.index0 }}" class="input--full" name="contact[{{ block.settings.title_1 | handleize }}]" autocapitalize="words" value="" placeholder="{{ block.settings.title_1 }}" {{ required }}/>
          </div>
        </div>
        {%- when 'upload-file' -%}
        <div class="form__item"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>
        <label for="fileupload">{{ 'contact.form.select_file' | t }}</label>
        <div class="drop-zone">
          <span class="drop-zone__prompt">
          {%- render 'icon-file-upload' -%}
          <span>Drag and Drop here</span></br><span class="drop-seperator">or</span></br><b>Browse Files</b></span>
          <input type="file" id="fileupload" name="UploadFiles" class="drop-zone__input" multiple>
        </div>
        <div class="drop-info">
          <span>Accepted file types: .jpg and .png</span>
          <span class="secure-text">{%- render 'icon-lock' -%}Secure</span>
        </div>
      </div>
    {%- endcase -%}
  {%- endfor -%}
{%- endcapture -%}

{%- style -%}
  #ContactForm--{{ section.id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
  }
  .contact-additional-info{
    background-color: {{ section.settings.additional_info_bg }};  
    font-size: 14px;
    line-height: 20px;
    padding: 20px;
  }
  {% if section.settings.contact_bgimg != blank %}
  .contact-form-bg {
    background-image: url('{{ section.settings.contact_bgimg | img_url:'' }}');
    background-repeat: no-repeat;
  }{% endif %}
  .contact-form{
    background-color: {{ section.settings.form_bg }};
    padding: 60px;    
  }
  .shopify-section--contact-form .wrapper--narrow {
    width: 960px;
  }
  .contact-form-wrapper {    
    filter: drop-shadow(0px 20px 20px rgba(0, 0, 0, 0.07));
  }
  .contact-form-wrapper.has-bg{
    padding-top: 228px;
  }
  .form__item.form__item--content {
    text-align: center;
  }
  h2.form__heading {
    color: var(--COLOR-BLACK);
  }
  .form__item.form__item--content p {
    margin: 0;
    font-size: 14px;
    line-height: 20px;
    color: var(--COLOR-BLACK);
  }
  .contact-form-wrapper .form__item input , .form__item select{
    padding: 12px 20px;
    border: 1px solid #E6E6E6;
  }
  .contact-form-wrapper .form__item input:focus{border-color:var(--COLOR-BLACK);}
  .contact-form-wrapper .form__item input::-webkit-input-placeholder{
    color: var(--COLOR-BLACK);
    font-size: 16px;
    line-height: 24px;
  }
  .contact-additional-info p {
    margin: 0 0 5px;
    color: var(--COLOR-BLACK);
  }
  .contact-additional-info p:last-child {
    margin: 0;
  }
  .country-select option[value="---"] {
    display: none;
  }
  .contact-form-wrapper .form__item label {
    display: flex;
  }
  @media(max-width: 1440px){
    .contact-form-wrapper.has-bg {padding-top: 160px;}
    .locations__info {padding-right: 120px;}
  }
  @media(max-width: 1299px){
    .contact-form-wrapper.has-bg {padding-top: 100px;}
    .locations__info {padding-right: 100px;}
  }
  @media(max-width: 1199px){
    .contact-form-wrapper.has-bg {padding-top: 80px;}
    .locations__info {padding-right: 80px;}
  }
  @media(max-width: 1023px){
    .contact-form-wrapper.has-bg {padding-top: 60px;}
    .locations__info {padding-right: 40px;}
  }
  @media(max-width: 767px){
    #ContactForm--{{ section.id }} {
      --PT: 0px;
      --PB: 0px;
    }
    .wrapper.locations__wrapper {display: flex;flex-wrap: wrap;}
    .locations__gallery {width: 100%;margin-bottom: 40px;}
    .contact-form-wrapper.has-bg {padding-top: 0px;}
    .contact-form-bg{background: none;}
    .locations__info {padding-right: 0;order: 2;}
    .contact-form{padding: 40px 24px;}
    .contact-form-wrapper{filter: none;}
    .contact-form-bg .wrapper--narrow {padding: 0;}
    .form__heading{width: 70%;margin: 0 auto 20px;}
    .form_address-fields {flex-wrap: wrap;gap: 0;}
    .form_address-fields .form__item {max-width: 100%;flex: 0 0 100%;}
    .contact-form .field-info{text-align: center;}
  }
{%- endstyle -%}

<section
id="ContactForm--{{ section.id }}"
class="section-padding"
data-section-type="contact-form"
data-section-id="{{ section.id }}">
  {% if section.settings.mob_image != blank %}
    <div class="contact-mobile-image hidden-lg">
      <figure>
        <img src="{{ section.settings.mob_image | img_url:'' }}" alt="{{ section.settings.mob_image.alt }}">
      </figure>
    </div>
  {% endif %}
  <div class="contact-form-bg" {% if animations_enabled %}
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 150 -%}
        {% endif %}>
  <div class="{{ section_width }}">
    <div class="contact-form-wrapper {% if section.settings.contact_bgimg != blank %}has-bg{% endif %}">
    {%- form 'contact', id: 'ContactForm'  -%}
      {%- comment -%}
        Success message
      {%- endcomment -%}
      {%- if form.posted_successfully? -%}
        <div class="contact-form__message" data-form-message>
          <div class="wrapper">
            <p class="note form-success">
              {{- 'contact.form.post_success' | t -}}
            </p>

            <button type="button" class="contact-form__message__close" data-form-message-close aria-label="{{ 'general.accessibility.close_form_message' | t }}">
              {%- render 'icon-close' -%}
            </button>
          </div>
        </div>
      {%- elsif form.errors -%}
        <div class="contact-form__message">
          <div class="wrapper">
            {{- form.errors | default_errors -}}
          </div>
        </div>
      {%- endif -%}

      {{- form_fields -}}

      {%- assign types = '' -%}
      {%- for block in section.blocks -%}
        {%- assign types = types | append: block.type -%}
      {%- endfor -%}

      {%- unless types contains "text" -%}
        {%- assign name_attr = 'contact.form.name' | t | handle -%}
        <div class="form__item">
          <label for="Form-{{ section.id }}-Name" class="hidden-label">{{ 'contact.form.name' | t }}</label>
          <input type="text" id="Form-{{ section.id }}-Name" class="input--full" name="contact[{{ name_attr }}]" placeholder="{{ 'contact.form.name' | t }}" autocapitalize="words" value="{% if form[name_attr] %}{{ form[name_attr] }}{% elsif customer %}{{ customer.name }}{% endif %}" required>
        </div>
      {%- endunless -%}

      {%- unless types contains "email" -%}
        <div class="form__item">
          <label for="Form-{{ section.id }}-Email" class="hidden-label">{{ 'contact.form.email' | t }}</label>
          <input type="email" id="Form-{{ section.id }}-Email" class="input--full" name="contact[email]" placeholder="{{ 'contact.form.email' | t }}" autocorrect="off" autocapitalize="off" value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}" required>
        </div>
      {%- endunless -%}

      {%- unless types contains "body" -%}
        <div class="form__item">
          <label for="Form-{{ section.id }}-Message" class="hidden-label">{{ 'contact.form.message' | t }}</label>
          <textarea rows="10" id="Form-{{ section.id }}-Message" class="input--full" name="contact[body]" placeholder="{{ 'contact.form.message' | t }}" required>{% if form.body %}{{ form.body }}{% endif %}</textarea>
        </div>
      {%- endunless -%}

      <div class="form__item form__item--submit"
        {% if animations_enabled %}
          data-aos="fade-up"
          data-aos-anchor="{{ animation_anchor }}"
          data-aos-delay="{{ animation_delay }}"
          {%- assign animation_delay = animation_delay | plus: 150 -%}
        {% endif %}>
        <button type="submit" class="btn">{{ 'contact.form.send' | t }}</button>
      </div>
      <span class="field-info">Fields marked with asterisks (*) are required.</span>

    {%- endform -%}
    <div class="contact-additional-info">
      {{ section.settings.additional_info }}
    </div>
    </div>
  </div>
    </div>
</section>

<script>
document.addEventListener("DOMContentLoaded", () => {

  //// file upload js
  document.querySelectorAll(".drop-zone__input").forEach((inputElement) => {
  const dropZoneElement = inputElement.closest(".drop-zone");

  dropZoneElement.addEventListener("click", (e) => {
    inputElement.click();
  });

  inputElement.addEventListener("change", (e) => {
    if (inputElement.files.length) {
      updateThumbnail(dropZoneElement, inputElement.files[0]);
    }
  });

  dropZoneElement.addEventListener("dragover", (e) => {
    e.preventDefault();
    dropZoneElement.classList.add("drop-zone--over");
  });

  ["dragleave", "dragend"].forEach((type) => {
    dropZoneElement.addEventListener(type, (e) => {
      dropZoneElement.classList.remove("drop-zone--over");
    });
  });

  dropZoneElement.addEventListener("drop", (e) => {
    e.preventDefault();
  
      if (e.dataTransfer.files.length) {
        inputElement.files = e.dataTransfer.files;
        updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);
      }
  
      dropZoneElement.classList.remove("drop-zone--over");
    });
  });
  /**
 * Updates the thumbnail on a drop zone element.
 *
 * @param {HTMLElement} dropZoneElement
 * @param {File} file
 */
  function updateThumbnail(dropZoneElement, file) {
    let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");
  
    // First time - remove the prompt
    if (dropZoneElement.querySelector(".drop-zone__prompt")) {
      dropZoneElement.querySelector(".drop-zone__prompt").remove();
    }
  
    // First time - there is no thumbnail element, so lets create it
    if (!thumbnailElement) {
      thumbnailElement = document.createElement("div");
      thumbnailElement.classList.add("drop-zone__thumb");
      dropZoneElement.appendChild(thumbnailElement);
    }
  
    thumbnailElement.dataset.label = file.name;
  
    // Show thumbnail for image files
    if (file.type.startsWith("image/")) {
      const reader = new FileReader();
  
      reader.readAsDataURL(file);
      reader.onload = () => {
        thumbnailElement.style.backgroundImage = `url('${reader.result}')`;
      };
    } else {
      thumbnailElement.style.backgroundImage = null;
    }
  }

  ///////// country state select js
  if(document.querySelector('.country-select') != null){
  let select = document.querySelector('.country-select');
  let selectState = document.querySelector('.state-select');
    select.addEventListener('change', (event)=> {
      
      for( k=selectState.length-1; k>=0; k--){
        selectState.remove('option'); 
      }  
      var getProvinces = '';                                                 
      for(i=0; i<select.length; i++){
      let getOptions = select.options[i];
        if ( getOptions.value == event.target.value){
        let getProvincesData = getOptions.dataset.provinces;
          if (getProvincesData != '[]'){
            getProvinces = getProvincesData.substring(1, getProvincesData.length-1);
            newProvinces = getProvinces.split('],[').join(",");
            listProvinces = newProvinces.split('","').join(', ');
            stringListProvinces = listProvinces.substring(2, listProvinces.length-2);
            arrListProvinces = stringListProvinces.split(', ');
            
            var res = arrListProvinces.filter(function(v, idx) {
              return idx % 2 == 0;
            });
    
            for(var j = 0; j < res.length; j++) {
              var opt = res[j];
              var el = document.createElement("option");
              el.textContent = opt;
              el.value = opt;    
              var optionLength = selectState.options.length;        
              selectState.appendChild(el);                
            }
            
          }else{
            var setOption = document.createElement("option"); 
            setOption.textContent = 'No State';
            setOption.value = 'No State';
            function setAttributes(element, attributes) {
              Object.keys(attributes).forEach(attr => {
                element.setAttribute(attr, attributes[attr]);
              });
            }            
            const attributes = {
              selected: 'selected',
              disabled: 'disabled',
            };
            setAttributes(setOption, attributes);
            selectState.appendChild(setOption);
          }
        }
      }
    });
  }
});
</script>

{% schema %}
{
  "name": "Contact form",
  "class": "shopify-section--contact-form",
  "settings": [    
    {
      "type": "image_picker",
      "id": "contact_bgimg",
      "label": "Contact Background Image"
    },
    {
      "type": "image_picker",
      "id": "mob_image",
      "label": "Mobile Iamge"
    },
    {
      "type": "color",
      "id": "form_bg",
      "label": "Contact Form Background",
      "default": "#fff"
    },
    {
      "type": "richtext",
      "id": "additional_info",
      "label": "Contact Additional Information"
    },
    {
      "type": "color",
      "id": "additional_info_bg",
      "label": "Additional Information Background",
      "default": "#fff"
    },
    {
      "type": "paragraph",
      "content": "Name, Email, and Message fields are required. You can add them as blocks in order to edit or reorder."
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper--narrow",
      "options": [
        { "value": "wrapper--full-padded", "label": "Full width padded" },
        { "value": "wrapper", "label": "Page width" },
        { "value": "wrapper--narrow", "label": "Page width narrow" }
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "Form heading",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Form heading",
          "default": "Contact us"
        }
      ]
    },
    {
      "type": "content",
      "name": "Form content",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "content",
          "label": "Form content"
        }
      ]
    },
    {
      "type": "email",
      "name": "Email",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Email"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        }
      ]
    },
    {
      "type": "body",
      "name": "Message",
      "limit": 1,
      "settings": [
        {
          "type": "textarea",
          "id": "title",
          "label": "Label",
          "default": "Message"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        }
      ]
    },
    {
      "type": "text",
      "name": "Text line",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Name",
          "info": "Example: Name"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "telephone",
      "name": "Telephone",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Phone Number",
          "info": "Example: Phone Number"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "upload-file",
      "name": "Upload File",
      "limit": 1
    },
    {
      "type": "spacer",
      "name": "Spacer",
      "settings": [
        {
          "type": "checkbox",
          "id": "line",
          "label": "Show line",
          "default": false
        }
      ]
    },
    {
      "type": "checkbox",
      "name": "Single checkbox",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Label",
          "default": "Checkbox option",
          "info": "Example: Subscribe to newsletter"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "data-checkbox",
      "name": "Data Checkbox",
      "settings": [
        {
          "type": "richtext",
          "id": "title",
          "label": "Label"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "select",
      "name": "Select dropdown",
      "settings": [        
        {
          "type":"header",
          "content":"Dropdown1"
        },
        {
          "type": "text",
          "id": "default_name",
          "label": "Select Default",
          "info":"Ex: Select Country"
        },
        {
          "type": "checkbox",
          "id": "required1",
          "label": "Required",
          "default": false
        },        
        {
          "type":"header",
          "content":"Dropdown2"
        },
        {
          "type": "text",
          "id": "default_name1",
          "label": "Select Default",
          "info":"Ex: Select State"
        },
        {
          "type": "checkbox",
          "id": "required2",
          "label": "Required",
          "default": false
        },        
        {
          "type":"header",
          "content":"Text"
        },
        {
          "type": "text",
          "id": "title_1",
          "label": "Label",
          "default": "Name",
          "info": "Example: Zip code"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        }
      ]
    },
    {
      "type": "radio",
      "name": "Radio buttons",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Pick an option"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": false
        },
        {
          "type": "header",
          "content": "Include up to six options",
          "info":  "Leave option text blank to exclude"
        },
        {
          "type": "text",
          "id": "label-one",
          "default": "Option one",
          "label": "Option one"
        },
        {
          "type": "text",
          "id": "label-two",
          "default": "Option two",
          "label": "Option two"
        },
        {
          "type": "text",
          "id": "label-three",
          "label": "Option three"
        },
        {
          "type": "text",
          "id": "label-four",
          "label": "Option four"
        },
        {
          "type": "text",
          "id": "label-five",
          "label": "Option five"
        },
        {
          "type": "text",
          "id": "label-six",
          "label": "Option six"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Contact form",
      "category": "Text",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "email"
        },
        {
          "type": "body"
        }
      ]
    }
  ]
}
{% endschema %} 