<div class="recently-viewed-wrapper">
  <div class="wrapper">
    <div class="recent-view-header">
      <h3>{{ section.settings.title }}</h3>
      <a href="#" target="_blank">View all Products</a>
    </div>
    <div class="recently-viewed-grid list-style-none">
    <!-- Recently viewed products will appear here -->
    </div>
  </div>
</div>

<script>
function getRecentlyViewedProducts() {
  const productData = JSON.parse(localStorage.getItem("recentlyViewedProduct"));
  const recentlyViewedHtml = [];
  {% liquid 
    assign image = featured_media.preview_image
    assign image_aspect_ratio = image.aspect_ratio | default: 1
  %}
  productData.map(item => {
    recentlyViewedHtml.unshift(`
	
	<div class="product-grid-item recently-viewed-grid-item">
      <div class="product-grid-item__inner">
        <div class="product-grid-item__image">
        <div class="product__media__outer">
        <div class="product__media__inner">
          <div class="product__media__container" style="--aspect-ratio: {{ image_aspect_ratio }};">
          <a href="${item.productUrl}"><img src="${item.productImg}"
               class="product__img" 
               alt="${item.productImageAltText}"
               loading="lazy"
                                         ></a>
          <div class="card__badge {{ settings.badge_position }}">
            {%- if product.available == false -%}
            <span class="badge badge--bottom-left color-{{ settings.sold_out_badge_color_scheme }}">Sold Out</span>
            {%- elsif product.compare_at_price > product.price and product.available -%}
            <span class="badge badge--bottom-left sale-badge color-{{ settings.sale_badge_color_scheme }}">Sale</span>
            {%- elsif product.tags contains 'new' -%}
            <span class="badge badge--bottom-left new-badge color-{{ settings.sale_badge_color_scheme }}">New</span>
            {%- endif -%}
          </div>
          </div>
          </div>
          </div>
        </div>

        <div class="product-grid-item__info{% unless settings.content_alignment == 'center' %}{{ product_alignment_class }}{% endunless %}"
          {% if animations_enabled %}
          data-aos="{{ text_animation }}"
          {% if animation_anchor %}
            data-aos-anchor="{{ animation_anchor }}"
          {% endif %}
          data-aos-delay="{{ animation_delay | times: 150 }}"
          {% endif %}>
          <a class="product-grid-item__title" href="{{ product.url | within: collection }}" aria-label="{{ product.title | strip_html | escape }}"{% if index > 1 %} tabindex="-1"{% endif %} data-grid-link>
            ${item.productTitle}
          </a>  

          <div class="price price--on-sale ">
          <div class="price__container">
          <div class="price__sale">
                  <span class="visually-hidden visually-hidden--inline">Regular price</span>
                  <span>
                    <s class="price-item price-item--regular">
                      
                        ${item.productComparePrice}
                      
                    </s>
                  </span><span class="visually-hidden visually-hidden--inline">Sale price</span>
                <span class="price-item price-item--sale price-item--last">
                  ${item.productPrice}
                </span>
              </div>
              <small class="unit-price caption hidden">
                <span class="visually-hidden">Unit price</span>
                <span class="price-item price-item--last">
                  <span></span>
                  <span aria-hidden="true">/</span>
                  <span class="visually-hidden">&nbsp;per&nbsp;</span>
                  <span>
                  </span>
                </span>
              </small>
            </div>
          </div>
          </div>

          <div class="swatch__button" data-swatch-button>         
          ${item.productVariant}
          </div>
        </div>
        
      </div>
    </div> 
   `);
  });
  const newProductData = `${recentlyViewedHtml.join("")}`;
  const fullContent = document.getElementsByClassName("recently-viewed-grid");
  fullContent[0].innerHTML = newProductData;
}

document.addEventListener("DOMContentLoaded", function (event) {
  getRecentlyViewedProducts();
});

</script>


<style>
  .recently-viewed-wrapper {
    background: #F9F9F9;
    padding-bottom: 120px;
  }
  .recently-viewed-wrapper .wrapper {
    width: 1560px;
  }
  .recent-view-header{max-width: 1131px;display: flex;align-items: center;justify-content: space-between;margin-bottom: 20px;}
  .recently-viewed-img {
    width: 100%;
  }
  .recently-viewed-grid {
    display: grid;
    grid-gap: 24px;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 332px), 1fr));
    list-style: none;
    margin:0; 
    max-width: 1131px;
    padding: 40px;
    background: #fff;
    border: 1px solid #ECECEB;
  }    
  .recently-viewed-grid-item {
    display: flex;
    flex-direction: column;
/*     text-align: center; */
  }
  .recently-viewed-a {
    text-decoration: none;
    color: black;
  }  
  .recently-viewed-grid-item .product-grid-item__info{
    text-align: left;
    gap: 0;
  }
  .recently-viewed-grid-item .product-grid-item__info .price__container {
    font-size: 14px;
    line-height: 20px;
  }
  .recently-viewed-grid-item .product__media__container a {
    display: inline-block;
    vertical-align: middle;
    width: 100%;
  }
  .recently-viewed-grid-item .product__media__container a img.product__img {
    object-fit: cover;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  .recently-viewed-grid-item .product__media__outer{
    padding-top: 146%;
  }
  .recent-view-header h3 {
    font-size: 24px;
    line-height: 32px;
    color: var(--COLOR-BLACK);
    margin-bottom: 0;
    font-family: var(--font-stack-body);
  }
  .recent-view-header a {
    font-size: 14px;
    line-height: 20px;
    color: var(--COLOR-BLACK);
  }
</style>

{% schema %}
  {
    "name": "Recent Products",
    "settings": [
      {
        "type":"text",
        "id":"title",
        "label":"Heading"
      }
    ],
  "presets": [
    {
      "name": "Recently viewd page"
    }
  ]
  }
{% endschema %}