<section id="recently-viewed-wrapper--{{ section.id }}" data-recently-viewed-section
  class="section-padding recently-viewed-wrapper"
  data-section-type="recently-views"
  data-section-id="{{ section.id }}">

  <div class="wrapper">
    <div class="recent-view-header">
      <h3>{{ section.settings.title }}</h3>
      <a href="/pages/recently-views" target="_blank">View all Products</a>
    </div>
    <div class="recently-viewed-grid list-style-none {% unless page.handle contains 'recently-views' %}recently-viewed-slider{% endunless %}">
    <!-- Recently viewed products will appear here -->
    </div>
  </div>
</section>

<script>
{% if page.handle contains 'recently-views' %}
  function getRecentlyViewedProducts() {
    const productData = JSON.parse(localStorage.getItem("recentlyViewedProduct"));
  console.log('productData',productData);
    const recentlyViewedHtml = [];
    {% liquid 
      assign image = featured_media.preview_image
      assign image_aspect_ratio = image.aspect_ratio | default: 1
    %}
  
    if ( productData == null ){
      document.querySelector('.recently-viewed-wrapper').style.display = 'none';
    }
    if ( productData != null ){
    productData.forEach(function(item, key) { 
      //console.log("productData-->", item, "---", key);
        recentlyViewedHtml.unshift(`
      	<div class="product-grid-item recently-viewed-grid-item">
            <div class="product-grid-item__inner">
              <div class="product-grid-item__image">
              <div class="product__media__outer">
              <div class="product__media__inner">
                <div class="product__media__container" style="--aspect-ratio: {{ image_aspect_ratio }};">
                <a href="${item.productUrl}"><img src="${item.productImg}"
                     class="product__img" 
                     alt="${item.productImageAltText}"
                     loading="lazy"
                                               ></a>
        
                </div>
                </div>
                <div class="product__badge">
                ${item.ProductBadges}
                </div>
                ${item.ProductQuickbuy}
                </div>
              </div>
      
              <div class="product-grid-item__info{% unless settings.content_alignment == 'center' %}{{ product_alignment_class }}{% endunless %}"
                {% if animations_enabled %}
                data-aos="{{ text_animation }}"
                {% if animation_anchor %}
                  data-aos-anchor="{{ animation_anchor }}"
                {% endif %}
                data-aos-delay="{{ animation_delay | times: 150 }}"
                {% endif %}>
                <a class="product-grid-item__title" href="{{ product.url | within: collection }}" aria-label="{{ product.title | strip_html | escape }}"{% if index > 1 %} tabindex="-1"{% endif %} data-grid-link>
                  ${item.productTitle}
                </a>  
                ${item.productPrice}
      
                <div class="swatch__button" data-swatch-button>         
                ${item.productVariant}
                </div>
              </div>
              
            </div>
          </div> 
        `);
    });
    }
    
    const newProductData = `${recentlyViewedHtml.join("")}`;
    const fullContent = document.getElementsByClassName("recently-viewed-grid");
    fullContent[0].innerHTML = newProductData;
  }
  {% else %}
  function getRecentlyViewedProducts() {
    const productData = JSON.parse(localStorage.getItem("recentlyViewedProduct"));
    const recentlyViewedHtml = [];
    {% liquid 
      assign image = featured_media.preview_image
      assign image_aspect_ratio = image.aspect_ratio | default: 1
    %}
  
    if ( productData == null ){
      document.querySelector('.recently-viewed-wrapper').style.display = 'none';
    }
    if ( productData != null ){
    var count = 0;
  console.log('-----',[...productData].sort().reverse());
    var productDataReverse = [...productData].sort().reverse();

    productData.forEach(function(item, key) { 
      count += 1;
        recentlyViewedHtml.unshift(`
      	<div class="product-grid-item recently-viewed-grid-item">
            <div class="product-grid-item__inner">
              <div class="product-grid-item__image">
              <div class="product__media__outer">
              <div class="product__media__inner">
                <div class="product__media__container" style="--aspect-ratio: {{ image_aspect_ratio }};">
                <a href="${item.productUrl}"><img src="${item.productImg}"
                     class="product__img" 
                     alt="${item.productImageAltText}"
                     loading="lazy"
                                               ></a>
        
                </div>
                </div>
                <div class="product__badge">
                ${item.ProductBadges}
                </div>
                ${item.ProductQuickbuy}
                </div>
              </div>
      
              <div class="product-grid-item__info{% unless settings.content_alignment == 'center' %}{{ product_alignment_class }}{% endunless %}"
                {% if animations_enabled %}
                data-aos="{{ text_animation }}"
                {% if animation_anchor %}
                  data-aos-anchor="{{ animation_anchor }}"
                {% endif %}
                data-aos-delay="{{ animation_delay | times: 150 }}"
                {% endif %}>
                <a class="product-grid-item__title" href="{{ product.url | within: collection }}" aria-label="{{ product.title | strip_html | escape }}"{% if index > 1 %} tabindex="-1"{% endif %} data-grid-link>
                  ${item.productTitle}
                </a>  
                ${item.productPrice}
      
                <div class="swatch__button" data-swatch-button>         
                ${item.productVariant}
                </div>
              </div>
              
            </div>
          </div> 
        `);
      
    });
    }
    
    const newProductData = `${recentlyViewedHtml.join("")}`;
    const fullContent = document.getElementsByClassName("recently-viewed-grid");
    fullContent[0].innerHTML = newProductData;
  }
{% endif %}

document.addEventListener("DOMContentLoaded", function (event) {
  getRecentlyViewedProducts();
});

</script>
<style>
  #recently-viewed-wrapper--{{ section.id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
  }
  .page--recently-views .recent-view-header a {
    display: none;
  }
  .recently-viewed-wrapper {
    background: #F9F9F9;
  }
  .recently-viewed-wrapper .wrapper {
    width: 1560px;
  }
  .recent-view-header{width: calc(100% - 309px);max-width: 100%;display: flex;align-items: center;justify-content: space-between;margin-bottom: 20px;}
  .recently-viewed-img {
    width: 100%;
  }
  .recently-viewed-grid {
    list-style: none;
    margin:0; 
    width: calc(100% - 309px);
    max-width: 100%;
    padding: 40px;
    background: #fff;
    border: 1px solid #ECECEB;    
  }   
  .recently-viewed-grid:not(.flickity-enabled){
    display: flex;
  }
  .recently-viewed-grid:not(.recently-viewed-slider){
    display: grid;
    grid-gap: 24px;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 332px), 1fr));
  }
  .recently-viewed-grid.recently-viewed-slider {
    padding: 40px 28px;
  }
  .recently-viewed-grid-item .product-grid-item__info{
    text-align: left;
    gap: 0;
  }
  .recently-viewed-grid-item .product-grid-item__info .price__container {
    font-size: 14px;
    line-height: 20px;
  }
  .recently-viewed-grid-item .product__media__container a {
    display: inline-block;
    vertical-align: middle;
    width: 100%;
  }
  .recently-viewed-grid-item .product__media__container a img.product__img {
    object-fit: cover;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  .recently-viewed-grid-item .product__media__outer{
    padding-top: 146%;
  }
  .recent-view-header h3 {
    font-size: 24px;
    line-height: 32px;
    color: var(--COLOR-BLACK);
    margin-bottom: 0;
    font-family: var(--font-stack-body);
  }
  .recent-view-header a {
    font-size: 14px;
    line-height: 20px;
    color: var(--COLOR-BLACK);
  }
  .recently-viewed-grid.recently-viewed-slider .recently-viewed-grid-item {
    max-width: 356px;
    width: 356px;
    padding: 0 12px;
  }
  @media(max-width: 1199px){
    .recently-viewed-grid.recently-viewed-slider {
      padding: 30px 0px;
    }
  }
  @media(max-width: 1023px){
    .recently-viewed-wrapper {
      background: #fff;
      padding: 20px 0;
    }
    .recently-viewed-grid{
      padding: 0;
      border: none;
    }
    .recently-viewed-grid ,.recent-view-header{ 
      width: 100%;
    }    
  }
  @media(max-width: 767px){
    .recently-viewed-grid.recently-viewed-slider {
      padding: 0;
    }
    .recently-viewed-grid.recently-viewed-slider .recently-viewed-grid-item {
      max-width: 284px;
      width: 284px;
      padding: 10px;
    }
    .recent-view-header h3 {
      font-size: 18px;
      line-height: 26px;
    }
  }
  @media(max-width: 575px){
    .recently-viewed-grid.recently-viewed-slider .recently-viewed-grid-item {
      max-width: 170px;
      width: 170px;
    }
    .recently-viewed-grid-item .product__media__outer {
      padding-top: 140%;
    }
  }
  @media(max-width: 350px){
    .recent-view-header a {
      font-size: 12px;
      line-height: 18px;
    }
  }
</style>

{% schema %}
  {
    "name": "Recent Products",
    "settings": [
      {
        "type":"text",
        "id":"title",
        "label":"Heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 60
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Padding bottom",
        "default": 60
      },
      {
        "type": "range",
        "id": "tab_padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Tablet Padding top",
        "default": 60
      },
      {
        "type": "range",
        "id": "tab_padding_bottom",
        "min": 0,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Tablet Padding bottom",
        "default": 60
      },
      {
        "type": "range",
        "id": "mob_padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Mobile Padding top",
        "default": 60
      },
      {
        "type": "range",
        "id": "mob_padding_bottom",
        "min": 0,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "Mobile Padding bottom",
        "default": 60
      }
    ],
  "presets": [
    {
      "name": "Recently viewd page"
    }
  ]
  }
{% endschema %}