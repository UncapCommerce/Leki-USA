{%- liquid
  assign unique = section.id
  assign layout = section.settings.layout
  assign layout_mobile = section.settings.layout_mobile
  assign section_width = section.settings.width
  assign image_size = section.settings.image_size
  assign image_shape = section.settings.image_shape
  assign columns = section.settings.columns
  assign columns_small = columns | at_most: 4
  assign columns_mobile = section.settings.columns_mobile | plus: 0 | at_least: 1
  assign collection_limit = 50
  assign text_size = section.settings.text_size
  assign text_color = section.settings.text_color
  assign show_bg_color = false
  assign bg_color_secondary = section.settings.bg_color_secondary
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = '#SubCollections--' | append: section.id
  assign text_over_image = section.settings.overlay_text

  assign carousel = false
  if layout == 'carousel'
    assign carousel = true
  endif

  case columns
    when 2
      assign item_width = 'one-half'
    when 3
      assign item_width = 'one-third'
    when 4
      assign item_width = 'one-quarter'
    when 5
      assign item_width = 'one-fifth'
    when 6
      assign item_width = 'one-sixth'
    when 7
      assign item_width = 'one-seventh'
    when 8
      assign item_width = 'one-eighth'
    else
      assign item_width = 'one-whole'
  endcase

  case columns_mobile
    when 2
      assign item_width_mobile = 'mobile--one-half'
    when 3
      assign item_width_mobile = 'mobile--one-third'
    else
      assign item_width_mobile = 'mobile--one-whole'
  endcase

  assign adjust_heading = text_size | divided_by: 100.0

  assign grid_class = 'grid'
  if columns > section.blocks.size and section.blocks.size > 0
    assign grid_class = 'grid--center'
  endif

  assign carousel = false
  if layout == 'carousel'
    assign carousel = true
  endif

  if image_shape != 'rectangle'
    assign height = 100
  else
    assign height = 75
  endif

  assign sub_collections_classes = 'sub-collections-section'

  if layout == 'grid'
    assign sub_collections_classes = sub_collections_classes | append: ' sub-collections-section--grid'
  endif

  if layout == 'carousel'
    assign sub_collections_classes = sub_collections_classes | append: ' sub-collections-section--carousel'
  endif

  if text_over_image == false
    assign sub_collections_classes = sub_collections_classes | append: ' sub-collections-section--under'
  endif

  if layout_mobile == 'grid'
    assign mobile_class = 'grid--mobile'
    assign sub_collections_classes = sub_collections_classes | append: ' sub-collections-section--grid-mobile'
  endif

  if layout_mobile == 'carousel'
    assign mobile_class = 'carousel--mobile'
    assign sub_collections_classes = sub_collections_classes | append: ' sub-collections-section--carousel-mobile'
  endif

  capture container_class
    if carousel
      echo 'carousel__container'
    else
      echo 'grid__container'
    endif

    echo ' sub-collections-section__container'
  endcapture
-%}

{%- style -%}
  #SubCollections--{{ section.id }} .section__heading { color: {{ text_color }}; }

  #SubCollections--{{ section.id }} .collection-list .flickity-prev-next-button:before { --text: {{ text_color }}; }

  #SubCollections--{{ section.id }} {
    {% comment %} Set a min of 10px top padding to avoid images being cut off when padding top setting is set to less than 10px {% endcomment %}
    --PT: max(10px, {{ section.settings.padding_top }}px);

    {% comment %} Set a min of 10px bottom padding to avoid images being cut off when padding bottom setting is set to less than 10px and text is over image {% endcomment %}
    {%- if text_over_image -%}
      --PB: max(10px, {{ section.settings.padding_bottom }}px);
    {%- else -%}
      --PB: {{ section.settings.padding_bottom }}px;
    {%- endif -%}
    --height: {{ height | append: '%' }};

    {%- if image_shape -%}
      --image-size: {{ image_size | append: '%' }};
    {%- endif -%}
  }

  {%- if text_size != blank -%}
    #SubCollections--{{ section.id }} .sub-collections__item__title,
    #SubCollections--{{ section.id }} .section__heading { --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ adjust_heading }}); }
  {%- endif -%}

  @media screen and (min-width: 1024px) {
    #SubCollections--{{ section.id }} { --grid: repeat({{ columns }}, minmax(0, 1fr)); }
  }

  @media screen and (min-width: 480px) and (max-width: 1023px) {
    #SubCollections--{{ section.id }} { --grid: repeat({{ columns_small }}, minmax(0, 1fr)); }
  }

  @media screen and (min-width: 768px) and (max-width: 1023px) {
    #SubCollections--{{ section.id }} { --item-width-tablet: calc(90% / 2 - var(--grid-gutter)); }
  }

  {%- if columns_mobile > 1 %}
  @media screen and (max-width: 767px) {
    {% comment %} Because we use it outside .carousel--mobile but .carousel--mobile is also setting its own value for this var and we need to overwrite it {% endcomment %}
    #SubCollections--{{ section.id }},
    #SubCollections--{{ section.id }} .carousel--mobile { --item-width-mobile: calc(90% / {{ columns_mobile }} - var(--grid-gutter)); }
  }
  {%- endif %}

  @media screen and (max-width: 1023px) {
    #SubCollections--{{ section.id }} {
      --PT: max(10px, {{ section.settings.tab_padding_top }}px);
      {%- if text_over_image -%}
        --PB: max(10px, {{ section.settings.tab_padding_bottom }}px);
      {%- else -%}
        --PB: {{ section.settings.tab_padding_bottom }}px;
      {%- endif -%}
    }
  }
  @media screen and (max-width: 767px) {
    #SubCollections--{{ section.id }} {
      --PT: max(10px, {{ section.settings.mob_padding_top }}px);
      {%- if text_over_image -%}
        --PB: max(10px, {{ section.settings.mob_padding_bottom }}px);
      {%- else -%}
        --PB: {{ section.settings.mob_padding_bottom }}px;
      {%- endif -%}
    }
  }
  @media screen and (max-width: 479px) {
    #SubCollections--{{ section.id }} { --grid-mobile: repeat({{ columns_mobile }}, minmax(0, 1fr)); }
  }
  
{%- endstyle -%}

{%- liquid
  if custom_collection_image
    assign image = custom_collection_image
  elsif collection.image
    assign image = collection.image
  elsif collection.products.first and collection.products.first.featured_media.preview_image
    assign image = collection.products.first.featured_media.preview_image
  endif

  if collection.title == blank
    assign collection_title = 'homepage.onboarding.collection_title' | t
    assign collection_url = '#!'
  else
    assign collection_title = collection.title | strip_html | escape | truncatewords: 10
    assign collection_url = collection.url
  endif

  assign animations_enabled = settings.animations_enabled

  if overlay_opacity == 100 and custom_bg_color != 'rgba(0,0,0,0)' and custom_bg_color != blank
    assign show_bg_color = true
  endif

  capture item_class
    echo 'list-collections__item'

    if image_shape == 'circle'
      echo ' list-collections__item--circle'
    endif

    if image_shape == 'square'
      echo ' list-collections__item--square'
    endif

    if image_shape == 'rectangle'
      echo ' list-collections__item--rectangle'
    endif

    if text_over_image
      echo ' list-collections__item--over-image'
    endif

    if collection == empty
      echo ' list-collections__item--onboarding'
    endif

    if carousel
      echo ' carousel__item'
    else
      echo ' grid__item'
    endif

    echo ' ' | append: item_width
    echo ' ' | append: item_width_mobile
    echo ' ' | append: text_color
  endcapture

  capture item_bg_class
    echo 'list-collections__item__image-bg'
  endcapture

  capture content_position_class
    if text_over_image
      echo 'list-collections__item__content--overlayed'
    else
      echo 'list-collections__item__content--under'
    endif
  endcapture
-%}
<section id="SubCollections--{{ section.id }}"
  class="section-padding {{ sub_collections_classes }}{% if bg_color_secondary %} bg-secondary{% endif %} {{ text_color }}"
  data-section-type="sub-collections"
  data-section-id="{{ section.id }}"
  data-columns="{{ columns }}"
  data-columns-mobile="{{ columns_mobile }}">

  <div class="{{ section_width }}">
    {%- if section.settings.title != blank -%}
      <div class="section__header">
        <h2 class="section__heading h2"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
            {%- assign animation_delay = animation_delay | plus: 150 -%}
          {% endif %}>{{ section.settings.title | escape }}</h2>

        {%- if settings.show_spacer_lines -%}
          <hr class="section__heading-line"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}>
        {%- endif -%}
      </div>
    {%- endif -%}

    <div class="{{ container_class }}">
        <div class="{% if carousel %}carousel{% else %}{{ grid_class }}{% endif %} {{ mobile_class }}"
          {% if carousel %}
            data-slider
            data-slider-id="slider--{{ section.id }}"
          {% else %}
            {% comment %} This data attribute is needed to trigger the mobile slider JS functionality {% endcomment %}
            {% if layout_mobile == 'carousel' %}
              data-slider
            {% endif %}
          {% endif %}>

          {% assign pageUrl = request.host | append: request.path %}
          {% assign finlaURL = pageUrl | split: '/' | last %}
          
          {%- for link in linklists['mega-menu'].links -%}
            {% assign menuLink = link.url | split: '/' | last %}
            {% for childlink in link.links %}
              {% for grandchildlink in childlink.links %}                
                {% if menuLink contains finlaURL %}                  
                      <div class="{{ item_class }}"
                      {% if carousel %}
                        data-slide
                      {% endif %}
                      {% if block_shopify_attributes %}
                        {{ block_shopify_attributes }}
                      {% endif %}>
                      <a href="{{ grandchildlink.url }}" class="list-collections__item__outer">      
                      <div class="list-collections__item__image"
                        data-product-media-container
                        {% if animations_enabled %}
                          data-aos="fade-up"
                          data-aos-anchor="{{ animation_anchor }}"
                          data-aos-delay="{{ animation_delay | times: 150 }}"
                        {% endif %}>    
                      {% if grandchildlink.object.image != blank %}
                        <div class="background-size-cover {{ item_bg_class }}">{{- grandchildlink.object.image | img_url: "" | img_tag -}}</div>                    
                      {% else %}
                       {{ 'image' | placeholder_svg_tag:'placeholder-svg-filled' }}
                      {% endif %}
                      </div>
                    <div class="list-collections__item__content {{ content_position_class }}"
                      {% if animations_enabled %}
                        data-aos="fade-up"
                        data-aos-anchor="{{ animation_anchor }}"
                        data-aos-delay="{{ animation_delay | times: 150 }}"
                      {% endif %}>
                      <h3 class="list-collections__item__title">
                        {{- grandchildlink.title -}}
                      </h3>
                    </div>
                    </a>
                  </div>
                {% endif %}
              {% endfor %}
            {% endfor %}
          {%- endfor -%}
          
          {%- liquid
            if section.blocks.size > 0
              for block in section.blocks limit: section.blocks.size
                assign unique = block.id
                assign collection = collections[block.settings.collection]
                assign custom_collection_image = block.settings.custom_collection_image
                assign custom_bg_color = block.settings.bg_color
                assign overlay_opacity = block.settings.overlay_opacity

                if text_over_image
                  assign text_color = block.settings.text_color
                endif

                if carousel
                  assign animation_delay = forloop.index0
                else
                  assign animation_delay = forloop.index0 | modulo: columns | times: 1
                endif

                capture placeholder_index
                  cycle 1, 2, 3
                endcapture

                render 'collection-grid-item', collection: collection, item_width: item_width, item_width_mobile: item_width_mobile, custom_collection_image: custom_collection_image, overlay_opacity: overlay_opacity, custom_bg_color: custom_bg_color, animation_delay: animation_delay, animation_anchor: animation_anchor, carousel: carousel, image_shape: image_shape, block_shopify_attributes: block.shopify_attributes, placeholder_index: placeholder_index, text_over_image: text_over_image, text_color: text_color, unique: unique
              endfor
            elsif template.name == 'sub-collections'
              comment
                Show all collections if list collections template and no blocks
              endcomment

              assign index = 0

              for collection in collections limit: collection_limit
                unless collection.handle == 'frontpage'
                  if carousel
                    assign animation_delay = index
                  else
                    assign animation_delay = index | modulo: columns | times: 1
                  endif

                  capture placeholder_index
                    cycle 1, 2, 3
                  endcapture

                  render 'collection-grid-item', collection: collection, item_width: item_width, item_width_mobile: item_width_mobile, custom_collection_image: custom_collection_image, overlay_opacity: overlay_opacity, custom_bg_color: custom_bg_color, animation_delay: animation_delay, animation_anchor: animation_anchor, carousel: carousel, image_shape: image_shape, block_shopify_attributes: block.shopify_attributes, placeholder_index: placeholder_index, text_over_image: text_over_image, text_color: text_color, unique: unique
                  assign index = index | plus: 1
                endunless
              endfor
            endif
          -%}
        </div>
    </div>
  </div>
</section>
